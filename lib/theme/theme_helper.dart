import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      colorScheme: colorScheme,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.pinkA100,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              26,
            ),
          ),
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: appTheme.pinkA100.withOpacity(0.1),
          shape: RoundedRectangleBorder(
            side: BorderSide(
              color: appTheme.pinkA100,
              width: 1,
            ),
            borderRadius: BorderRadius.circular(
              16,
            ),
          ),
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateProperty.all<Color>(appTheme.pinkA100),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        checkColor: MaterialStateProperty.all<Color>(appTheme.pinkA100),
        fillColor: MaterialStateProperty.all<Color>(colorScheme.primary),
        side: BorderSide(
          color: colorScheme.primary,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.pink40001,
      ),
      textTheme: TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.blueGray90005,
          fontSize: getFontSize(
            15,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: appTheme.black90001,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w700,
        ),
        bodyLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            17,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray80001,
          fontSize: getFontSize(
            14,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray60002,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: getFontSize(
            30,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray80001,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.gray60002,
          fontSize: getFontSize(
            9,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black90001,
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w300,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray60002,
          fontSize: getFontSize(
            12,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            40,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.black90001,
          fontSize: getFontSize(
            20,
          ),
          fontFamily: 'PT Sans',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            34,
          ),
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
      ),
      visualDensity: VisualDensity.standard,
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    onPrimary: Color(0XFF2D2E2E),
    shadow: Color(0XFF2D2E2E),
    onPrimaryContainer: Color(0XFF030303),
    onTertiary: Color(0XFF030303),
    scrim: Color(0XFF3A4E39),
    primaryContainer: Color(0XFF3A4E39),
    tertiaryContainer: Color(0XFFF2F2F2),
    secondaryContainer: Color(0XFFF2F2F2),
    error: Color(0XFF2D2E2E),
    onErrorContainer: Color(0X7C1C1B1F),
    outline: Color(0XFF2D2E2E),
    onSurfaceVariant: Color(0XFF2C2C2C),
    onBackground: Color(0XFF030303),
    outlineVariant: Color(0XFF3A4E39),
    errorContainer: Color(0XFF00D971),
    onSurface: Color(0XFF030303),
    onError: Color(0XFFFEFCE8),
    surface: Color(0XFF3A4E39),
    onInverseSurface: Color(0XFFFEFCE8),
    onSecondaryContainer: Color(0XFF2C2C2C),
    tertiary: Color(0XFF3A4E39),
    surfaceTint: Color(0XFF2D2E2E),
    onTertiaryContainer: Color(0XFF2C2C2C),
    surfaceVariant: Color(0XFFF2F2F2),
    inversePrimary: Color(0XFF3A4E39),
    secondary: Color(0XFF3A4E39),
    inverseSurface: Color(0XFF2D2E2E),
    background: Color(0XFF3A4E39),
    onSecondary: Color(0XFF030303),
    primary: Color(0XFFFFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  Color get primaryVariant => Color(0XFF3A4E39);
  Color get secondaryVariant => Color(0XFFF2F2F2);
  Color get gray900 => Color(0XFF18181B);
  Color get blue30019 => Color(0X1963B4FF);
  Color get lightBlueA400 => Color(0XFF00B0FF);
  Color get gray600 => Color(0XFF72777B);
  Color get green50 => Color(0XFFE6F2EA);
  Color get blue50 => Color(0XFFEAF8FF);
  Color get black900 => Color(0XFF010101);
  Color get pink900 => Color(0XFF961D5A);
  Color get lightBlue800 => Color(0XFF0170BC);
  Color get gray500 => Color(0XFF939393);
  Color get gray90001 => Color(0XFF240046);
  Color get orangeA200 => Color(0XFFF6A23B);
  Color get deepOrange400 => Color(0XFFF76449);
  Color get gray100 => Color(0XFFF6F6F6);
  Color get blueGray400 => Color(0XFF8E8E93);
  Color get teal40066 => Color(0X662F8882);
  Color get pink300 => Color(0XFFFD4EA6);
  Color get blueGray90019 => Color(0X190F264A);
  Color get pink50 => Color(0XFFFFE6ED);
  Color get gray300 => Color(0XFFE4E4E7);
  Color get gray10001 => Color(0XFFEFF1FC);
  Color get blue5001 => Color(0XFFE1F2FF);
  Color get gray30001 => Color(0XFFE4E4E4);
  Color get greenA400 => Color(0XFF0EC979);
  Color get pinkA700 => Color(0XFFC8116D);
  Color get green600 => Color(0XFF28B446);
  Color get gray90002 => Color(0XFF131313);
  Color get blueGray100 => Color(0XFFD0D0D0);
  Color get blueGray300 => Color(0XFF809FB8);
  Color get yellow200 => Color(0XFFFCE89C);
  Color get lightBlue80001 => Color(0XFF0277BD);
  Color get gray50 => Color(0XFFF7F9FC);
  Color get gray5001 => Color(0XFFF0FDFA);
  Color get gray50001 => Color(0XFFA1A1AA);
  Color get blueGray900 => Color(0XFF2D344B);
  Color get pink400 => Color(0XFFDA438F);
  Color get gray5002 => Color(0XFFF3F8FF);
  Color get lightBlueA700 => Color(0XFF0089FF);
  Color get blueGray800 => Color(0XFF384455);
  Color get indigoA100 => Color(0XFF9BA6FA);
  Color get gray400 => Color(0XFFBDBDBD);
  Color get lime600 => Color(0XFFC9CC41);
  Color get red500 => Color(0XFFFF4E32);
  Color get yellow700 => Color(0XFFFAC52E);
  Color get lightBlue4002d => Color(0X2D1FACE8);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get greenA100 => Color(0XFFAFE8CA);
  Color get gray200 => Color(0XFFF0F0F0);
  Color get blueGray90001 => Color(0XFF18273B);
  Color get gray5003 => Color(0XFFF5F3FF);
  Color get blueGray90002 => Color(0XFF333333);
  Color get blueGray30001 => Color(0XFF919CAD);
  Color get yellow50 => Color(0XFFFCFFE4);
  Color get cyan700 => Color(0XFF0899A0);
  Color get blueGray40001 => Color(0XFF8992A3);
  Color get blueGray90003 => Color(0XFF21283F);
  Color get blue5002 => Color(0XFFE8F5FF);
  Color get yellow70001 => Color(0XFFF5B93B);
  Color get red50 => Color(0XFFFEF2F2);
  Color get pinkA100 => Color(0XFFFF69B4);
  Color get gray10002 => Color(0XFFF3EFFA);
  Color get gray30002 => Color(0XFFE6E6E6);
  Color get gray9009b => Color(0X9B141927);
  Color get blueGray50 => Color(0XFFE7EAEE);
  Color get gray10003 => Color(0XFFF4F4F4);
  Color get blueGray40002 => Color(0XFF83899B);
  Color get blueGray500 => Color(0XFF677294);
  Color get gray800 => Color(0XFF414141);
  Color get gray10004 => Color(0XFFF4F4F5);
  Color get blueGray90004 => Color(0XFF091F44);
  Color get lightBlueA70089 => Color(0X890088FF);
  Color get indigoA200 => Color(0XFF4870FF);
  Color get gray60001 => Color(0XFF757575);
  Color get gray90003 => Color(0XFF0B1524);
  Color get cyan500 => Color(0XFF0CD3DB);
  Color get whiteA700 => Color(0XFFFEFEFE);
  Color get gray10005 => Color(0XFFF2F5F8);
  Color get gray30003 => Color(0XFFE2E2E2);
  Color get blue5003 => Color(0XFFE5EFF9);
  Color get orangeA20001 => Color(0XFFFF9C41);
  Color get blueGray10002 => Color(0XFFCECECE);
  Color get gray50002 => Color(0XFF9E9E9E);
  Color get blueGray90005 => Color(0XFF222B45);
  Color get gray5004 => Color(0XFFF6F9FD);
  Color get orange50 => Color(0XFFFFF5E5);
  Color get red700 => Color(0XFFBD3D44);
  Color get gray30004 => Color(0XFFE7E3E3);
  Color get deepPurpleA100 => Color(0XFFAE7FFF);
  Color get gray50003 => Color(0XFF999999);
  Color get teal50 => Color(0XFFDCF4F5);
  Color get blueGray30002 => Color(0XFF94A3B8);
  Color get orange5001 => Color(0XFFFFE9DD);
  Color get indigo900 => Color(0XFF243465);
  Color get blue5004 => Color(0XFFD8E8FB);
  Color get indigoA20001 => Color(0XFF6979F8);
  Color get yellow5001 => Color(0XFFFFF7ED);
  Color get whiteA70001 => Color(0XFFFFFDFD);
  Color get blueGray600 => Color(0XFF4A6375);
  Color get pink5001 => Color(0XFFFFD8F4);
  Color get deepOrange50 => Color(0XFFFFE9E5);
  Color get lightBlueA40001 => Color(0XFF00C6F2);
  Color get gray5005 => Color(0XFFFAFAFA);
  Color get blueGray40004 => Color(0XFF888888);
  Color get gray60002 => Color(0XFF7F7F7F);
  Color get blueA4004c => Color(0X4C217EFD);
  Color get blueGray5001 => Color(0XFFEDF1F7);
  Color get blue400 => Color(0XFF32A4FB);
  Color get gray60003 => Color(0XFF79747E);
  Color get indigo100 => Color(0XFFC5CEE0);
  Color get red50001 => Color(0XFFEA4335);
  Color get indigo5099 => Color(0X99EBEBF5);
  Color get blueGray30003 => Color(0XFF8696BB);
  Color get gray60004 => Color(0XFF7C7C7C);
  Color get blueGray30004 => Color(0XFF8F9BB3);
  Color get indigo50 => Color(0XFFDEDCF9);
  Color get gray40099 => Color(0X99B1B1B1);
  Color get gray90004 => Color(0XFF1F1F1F);
  Color get blueGray700 => Color(0XFF52525B);
  Color get orange100 => Color(0XFFFFDCBD);
  Color get greenA700 => Color(0XFF1EC760);
  Color get orange5002 => Color(0XFFFFF6E3);
  Color get gray90005 => Color(0XFF212121);
  Color get pink40001 => Color(0XFFF74077);
  Color get blueGray90006 => Color(0XFF292D32);
  Color get gray80001 => Color(0XFF3A3A3A);
  Color get black90001 => Color(0XFF000000);
  Color get blueGray40003 => Color(0XFF868889);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
